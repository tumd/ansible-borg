---
- name: "Debug server {{ borg_server_item }}"
  debug:
    var: "hostvars[borg_server_item]"
    verbosity: 2

- name: "Setting up client '{{ inventory_hostnameÂ }}' with repo on '{{ borg_server_item }}'"
  assert:
    that:
      - "hostvars[borg_server_item] is defined"
      - "hostvars[borg_server_item].inventory_hostname_short"
    msg: "The node passed as a borg-repository doesn't seem to be a valid host in the inventory. 'borg_server_item'={{ borg_server_item }}"

- name: "Generate ssh-key 'id_rsa_{{ borg_client_sshkey_name }}_{{ hostvars[borg_server_item].inventory_hostname_short }}'"
  user:
    name: "{{ borg_client_user }}"
    generate_ssh_key: yes
    ssh_key_bits: "{{ borg_client_sshkey_bits }}"
    ssh_key_file: "~{{ borg_client_user }}/.ssh/id_rsa_{{ borg_client_sshkey_name }}_{{ hostvars[borg_server_item].inventory_hostname_short }}"
    ssh_key_comment: "{{ borg_client_user }}@{{ borg_server_user }} for borg"
    ssh_key_type: "rsa"
  register: user_ssh_key
  when: borg_enabled|bool

- name: "Make sure that Ansible local facts directory exists"
  file:
    path: "/etc/ansible/facts.d"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0755"

- name: "Check if fact 'borg_server_user' exists"
  stat:
    path: "/etc/ansible/facts.d/borg_server_user.fact"
  register: "borg_server_user_fact_stat"

- name: "Save 'borg_server_user' local facts"
  copy:
    content: "{{ borg_server_user | to_nice_json }}"
    dest: '/etc/ansible/facts.d/borg_server_user.fact'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: "borg_server_user_facts"
  when: not borg_server_user_fact_stat.stat.exists
          or borg_server_user_forceupdate|d(False)|bool

- name: Update Ansible facts if they were modified
  action: setup
  when: borg_server_user_facts is defined and borg_server_user_facts is changed

- include_tasks: server.yml
  tags: [ "borg_server" ]

- name: "Setup [{{ borg_server_address }}]:{{ borg_server_port}} in known-hosts"
  known_hosts:
    path: "~{{ borg_client_user }}/.ssh/known_hosts"
    name: "[{{ borg_server_address }}]:{{ borg_server_port}}"
    key: "[{{ borg_server_address }}]:{{ borg_server_port}} ssh-rsa {{ hostvars[borg_server_item].ansible_ssh_host_key_rsa_public }}"
  when: borg_enabled|bool
