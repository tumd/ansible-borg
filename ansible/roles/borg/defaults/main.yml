---

borg_binary: True
borg_wrapper: "{{ borg_binary }}"
borg_enabled: "{{ borg_wrapper }}"

### Binary

borg_version: "1.1.6"
borg_arch: "{{ '64' if ansible_architecture == 'x86_64' else '32' }}"
borg_url: "https://github.com/borgbackup/borg/releases/download/{{ borg_version }}/borg-linux{{ borg_arch }}"
borg_checksum: "{{ borg_checksum_map[borg_arch] }}"
borg_checksum_map:
  "64": "sha256:cc5211b19954fa27bd9d6ee609765d3e7b39d4feecc42adb3207a418746136d9"
  "32": "sha256:ee4229dfab3cce38c878390384c427babee7f7c9c3539239c3cee168fcc01da7"

### Servers
borg_server_list:
  - "{{ groups.borg_servers[0]|d([]) }}"

borg_server_enabled: "{{ hostvars[borg_server_item].borg_server_enabled |
                          default( 'True' )}}"

# Set the fqdn for the backupserver clients should use for connection.
# Will lookup specific address set on the backup-server's config, and fallback
# to it's FQDN.
#
# Server address may be tricky if your backup-server is inside (evil) NAT.
borg_server_address: "{{ hostvars[borg_server_item].borg_server_address |
                          default( hostvars[borg_server_item].ansible_fqdn )}}"

borg_server_port: "{{ hostvars[borg_server_item].borg_server_port |
                          default( '22' )}}"

# Be able to specify the path of backup-clients home-dir.
# Defaults to '/home'
borg_server_home: "{{ hostvars[borg_server_item].borg_server_home |
                        default( '/home' ) }}"

# Set backup-dir in backup-clients home.
# Defaults to 'backup/'
borg_server_bdir:  "{{ hostvars[borg_server_item].borg_server_bdir |
                        default( 'backup' ) }}"

# The clients username on destination server.
# On first setup this username will be saved as a local fact on the client,
# to prevent creating a _new_ user on the server if the client's hostname
# by some reason gets changed.
borg_server_user: "{{ inventory_hostname_short if borg_server_user_forceupdate|d(False)|bool
                        else ansible_local.borg_server_user|d(inventory_hostname_short) }}"

### Client

# The user used for backup of a client
borg_client_user: "root"

# Use an unique ssh-key for communicating with backup-server
borg_client_sshkey_name: "id_rsa_borg_{{ hostvars[borg_server_item].inventory_hostname_short }}"

borg_client_sshkey_bits: "4096"

# Bellow arguments and options can be used with different
# settings for each repository server, expanding the lists in a map-lookup.
# For example;
#
# borg_client_exclusive_paths: "{{ borg_client_exclusive_paths_map[borg_server_item] |
#                          default(borg_client_exclusive_paths_map['default']) }}"
#
# borg_client_exclusive_paths_map:
#   "server1":
#     - "/"
#     - "/var"
#   "server2":
#     - "/"
#     - "/boot"
#   "default":
#     - "/"
#

# List of exclusive paths to backup
borg_client_exclusive_paths: []

# List of additional paths to backup
# This is probably the one you want to use.
borg_client_paths: []

# List of paths/globs to exclude
borg_client_exclusive_excludes: []

# List of additional paths/globs to exclude
# This is probably the one you want to use.
borg_client_excludes: []

# List of additional arguments passed to the create-subcommand.
borg_client_create_args: []

# List of exclusive prune arguments.
borg_client_prune_args: []

### Manager
borg_manager_host: "localhost"

borg_manager_sshkeys: []
